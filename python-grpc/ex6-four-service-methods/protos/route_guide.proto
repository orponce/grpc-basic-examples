
syntax = "proto3";

package routeguide;

service RouteGuide {

  // Unary RPC (simple RPC).
  // Obtains the feature at a given position. A feature with an empty name is
  // returned if there's no feature at the given position.
  rpc GetFeature(Point) returns (Feature) {}

  // Server streaming RPC (server-to-client streaming RPC).
  // Obtains the Features available within the given Rectangle. Results are
  // streamed as the rectangle may contain a huge number of features.
  rpc ListFeatures(Rectangle) returns (stream Feature) {}

  // Client streaming RPC (client-to-server streaming RPC).
  // Accepts a stream of Points on a route being traversed, returning a
  // RouteSummary when traversal is completed.
  rpc RecordRoute(stream Point) returns (RouteSummary) {}

  // Bidirectional streaming RPC.
  // Accepts a stream of RouteNotes sent while a route is being traversed,
  // while receiving other RouteNotes (e.g. from other users).
  rpc RouteChat(stream RouteNote) returns (stream RouteNote) {}
}

// Points are represented as latitude-longitude pairs
message Point {
  int32 latitude = 1;
  int32 longitude = 2;
}

// A latitude-longitude rectangle.
message Rectangle {
  // One corner of the rectangle.
  Point lo = 1;
  // The other corner of the rectangle.
  Point hi = 2;
}

// A feature names something at a given point.
message Feature {
  // The name of the feature.
  string name = 1;
  // The point where the feature is detected.
  Point location = 2;
}

// A RouteNote is a message sent while at a given point.
message RouteNote {
  // The location from which the message is sent.
  Point location = 1;
  // The message to be sent.
  string message = 2;
}

// A RouteSummary is received in response to a RecordRoute rpc.
message RouteSummary {
  // The number of points received.
  int32 point_count = 1;
  // The number of known features passed while traversing the route.
  int32 feature_count = 2;
  // The distance covered in metres.
  int32 distance = 3;
  // The duration of the traversal in seconds.
  int32 elapsed_time = 4;
}
